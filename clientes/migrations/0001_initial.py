# Generated by Django 5.2.1 on 2025-09-18 02:44

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('usuarios', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rut', models.CharField(help_text='RUT en formato 12345678-9 (sin puntos, con guión y dígito verificador)', max_length=12, unique=True)),
                ('nombres', models.CharField(help_text='Nombres del cliente (ej: Juan Carlos)', max_length=80, verbose_name='Nombres')),
                ('ap_paterno', models.CharField(help_text='Apellido paterno (ej: González)', max_length=80, verbose_name='Apellido Paterno')),
                ('ap_materno', models.CharField(help_text='Apellido materno (ej: Pérez)', max_length=80, verbose_name='Apellido Materno')),
                ('telefono', models.CharField(help_text='Teléfono de contacto (+56912345678 o 912345678)', max_length=20, validators=[django.core.validators.RegexValidator(message='El teléfono debe ser válido (ej: +56912345678 o 912345678)', regex='^\\+?56?[2-9]\\d{8}$')], verbose_name='Teléfono')),
                ('email', models.EmailField(help_text='Correo electrónico válido (ej: cliente@dominio.com)', max_length=80, verbose_name='Correo Electrónico')),
                ('direccion', models.CharField(help_text='Dirección completa (calle, número, depto, etc.)', max_length=250, verbose_name='Dirección')),
                ('estado', models.BooleanField(default=True, help_text='Indica si el cliente está activo en el sistema', verbose_name='Estado Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro', verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro', verbose_name='Fecha de Actualización')),
                ('comuna_id', models.ForeignKey(blank=True, help_text='Comuna de residencia del cliente', null=True, on_delete=django.db.models.deletion.SET_NULL, to='usuarios.comuna', verbose_name='Comuna')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['ap_paterno', 'ap_materno', 'nombres'],
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_empresa', models.CharField(help_text="Nombre de fantasía o marca (ej: 'Tech Solutions')", max_length=150, verbose_name='Nombre de la Empresa')),
                ('razon_social', models.CharField(help_text="Nombre legal registrado (ej: 'TECH SOLUTIONS S.A.')", max_length=250, unique=True)),
                ('giro', models.CharField(help_text="Actividad económica principal (ej: 'VENTA EQUIPOS TECNOLÓGICOS')", max_length=150, verbose_name='Giro Comercial')),
                ('rut_empresa', models.CharField(help_text='RUT en formato 12345678-9 (sin puntos, con guión y dígito verificador)', max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='El RUT debe estar en formato 12345678-9', regex='^\\d{7,8}-[\\dkK]$')], verbose_name='RUT de la Empresa')),
                ('direccion', models.CharField(help_text='Dirección fiscal completa (calle, número, depto, etc.)', max_length=250, verbose_name='Dirección')),
                ('telefono', models.CharField(help_text='Teléfono de contacto (+56912345678 o 912345678)', max_length=20, validators=[django.core.validators.RegexValidator(message='El teléfono debe ser válido (ej: +56912345678 o 912345678)', regex='^\\+?56?[2-9]\\d{8}$')], verbose_name='Teléfono')),
                ('email', models.EmailField(help_text='Correo electrónico válido de la empresa', max_length=80, verbose_name='Correo Electrónico')),
                ('estado', models.BooleanField(default=True, help_text='Indica si la empresa está activa en el sistema', verbose_name='Estado Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el registro', verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización del registro', verbose_name='Fecha de Actualización')),
                ('comuna_id', models.ForeignKey(help_text='Comuna de la empresa', on_delete=django.db.models.deletion.PROTECT, to='usuarios.comuna', verbose_name='Comuna')),
                ('representante_id', models.ForeignKey(help_text='Cliente registrado como representante legal', on_delete=django.db.models.deletion.PROTECT, to='clientes.cliente', verbose_name='Representante Legal')),
            ],
            options={
                'verbose_name': 'Empresa Cliente',
                'verbose_name_plural': 'Empresas Clientes',
                'ordering': ['nombre_empresa'],
            },
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['rut'], name='clientes_cl_rut_43a54a_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['ap_paterno', 'ap_materno'], name='clientes_cl_ap_pate_e8de21_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['estado'], name='clientes_cl_estado_54796b_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['comuna_id'], name='clientes_cl_comuna__545bb5_idx'),
        ),
        migrations.AddConstraint(
            model_name='cliente',
            constraint=models.UniqueConstraint(fields=('rut',), name='unique_cliente_rut'),
        ),
        migrations.AddIndex(
            model_name='empresa',
            index=models.Index(fields=['razon_social'], name='clientes_em_razon_s_5be9b2_idx'),
        ),
        migrations.AddIndex(
            model_name='empresa',
            index=models.Index(fields=['rut_empresa'], name='clientes_em_rut_emp_0bc439_idx'),
        ),
        migrations.AddIndex(
            model_name='empresa',
            index=models.Index(fields=['nombre_empresa'], name='clientes_em_nombre__4ca229_idx'),
        ),
        migrations.AddIndex(
            model_name='empresa',
            index=models.Index(fields=['estado'], name='clientes_em_estado_28f896_idx'),
        ),
        migrations.AddIndex(
            model_name='empresa',
            index=models.Index(fields=['comuna_id'], name='clientes_em_comuna__1f2751_idx'),
        ),
        migrations.AddConstraint(
            model_name='empresa',
            constraint=models.UniqueConstraint(fields=('razon_social',), name='unique_empresa_razon_social'),
        ),
        migrations.AddConstraint(
            model_name='empresa',
            constraint=models.UniqueConstraint(fields=('rut_empresa',), name='unique_empresa_rut'),
        ),
    ]
